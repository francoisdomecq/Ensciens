// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ensciens.Migrations
{
    [DbContext(typeof(EnsciensContext))]
    [Migration("20220114184316_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Ensciens.Models.Commentaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contenu")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateEnvoi")
                        .HasColumnType("TEXT");

                    b.Property<int>("PublicateurId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PublicationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PublicateurId");

                    b.HasIndex("PublicationId");

                    b.ToTable("Commentaires");
                });

            modelBuilder.Entity("Ensciens.Models.Evenement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Lieu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganisateurId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrganisateurId");

                    b.ToTable("Evenement");
                });

            modelBuilder.Entity("Ensciens.Models.Famille", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Couleur")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NombreEleves")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Famille");
                });

            modelBuilder.Entity("Ensciens.Models.LienBureauEleve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BureauId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EleveId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BureauId");

                    b.HasIndex("EleveId");

                    b.ToTable("Lien Bureaux Eleve");
                });

            modelBuilder.Entity("Ensciens.Models.LienClubEleve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClubId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EleveId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("EleveId");

                    b.ToTable("Lien Club Eleve");
                });

            modelBuilder.Entity("Ensciens.Models.Publicateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Publicateur");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Publicateur");
                });

            modelBuilder.Entity("Ensciens.Models.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatePublication")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EvenementId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Medias")
                        .HasColumnType("TEXT");

                    b.Property<int>("PublicateurId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EvenementId");

                    b.HasIndex("PublicateurId");

                    b.ToTable("Publication");
                });

            modelBuilder.Entity("Ensciens.Models.Eleve", b =>
                {
                    b.HasBaseType("Ensciens.Models.Publicateur");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FamilleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoProfil")
                        .HasColumnType("TEXT");

                    b.Property<string>("Promotion")
                        .HasColumnType("TEXT");

                    b.HasIndex("FamilleId");

                    b.HasDiscriminator().HasValue("Eleve");
                });

            modelBuilder.Entity("Ensciens.Models.Organisateur", b =>
                {
                    b.HasBaseType("Ensciens.Models.Publicateur");

                    b.HasDiscriminator().HasValue("Organisateur");
                });

            modelBuilder.Entity("Ensciens.Models.Bureau", b =>
                {
                    b.HasBaseType("Ensciens.Models.Organisateur");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("Bureau_Description");

                    b.Property<string>("Logo")
                        .HasColumnType("TEXT")
                        .HasColumnName("Bureau_Logo");

                    b.HasDiscriminator().HasValue("Bureau");
                });

            modelBuilder.Entity("Ensciens.Models.Club", b =>
                {
                    b.HasBaseType("Ensciens.Models.Organisateur");

                    b.Property<int>("BureauId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Logo")
                        .HasColumnType("TEXT");

                    b.HasIndex("BureauId");

                    b.HasDiscriminator().HasValue("Club");
                });

            modelBuilder.Entity("Ensciens.Models.Commentaire", b =>
                {
                    b.HasOne("Ensciens.Models.Publicateur", "Publicateur")
                        .WithMany()
                        .HasForeignKey("PublicateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ensciens.Models.Publication", null)
                        .WithMany("Commentaires")
                        .HasForeignKey("PublicationId");

                    b.Navigation("Publicateur");
                });

            modelBuilder.Entity("Ensciens.Models.Evenement", b =>
                {
                    b.HasOne("Ensciens.Models.Organisateur", "Organisateur")
                        .WithMany()
                        .HasForeignKey("OrganisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisateur");
                });

            modelBuilder.Entity("Ensciens.Models.LienBureauEleve", b =>
                {
                    b.HasOne("Ensciens.Models.Bureau", "Bureau")
                        .WithMany()
                        .HasForeignKey("BureauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ensciens.Models.Eleve", "Eleve")
                        .WithMany()
                        .HasForeignKey("EleveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bureau");

                    b.Navigation("Eleve");
                });

            modelBuilder.Entity("Ensciens.Models.LienClubEleve", b =>
                {
                    b.HasOne("Ensciens.Models.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ensciens.Models.Eleve", "Eleve")
                        .WithMany()
                        .HasForeignKey("EleveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Eleve");
                });

            modelBuilder.Entity("Ensciens.Models.Publication", b =>
                {
                    b.HasOne("Ensciens.Models.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("EvenementId");

                    b.HasOne("Ensciens.Models.Publicateur", "Publicateur")
                        .WithMany()
                        .HasForeignKey("PublicateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evenement");

                    b.Navigation("Publicateur");
                });

            modelBuilder.Entity("Ensciens.Models.Eleve", b =>
                {
                    b.HasOne("Ensciens.Models.Famille", "Famille")
                        .WithMany()
                        .HasForeignKey("FamilleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Famille");
                });

            modelBuilder.Entity("Ensciens.Models.Club", b =>
                {
                    b.HasOne("Ensciens.Models.Bureau", "Bureau")
                        .WithMany()
                        .HasForeignKey("BureauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bureau");
                });

            modelBuilder.Entity("Ensciens.Models.Publication", b =>
                {
                    b.Navigation("Commentaires");
                });
#pragma warning restore 612, 618
        }
    }
}
